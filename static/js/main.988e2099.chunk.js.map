{"version":3,"sources":["components/Card.js","components/CardList.js","components/ErrorBoundary.js","components/Scroll.js","components/SearchBox.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","src","alt","CardList","cats","map","user","i","ErrorBoundary","props","useState","error","setError","children","Scroll","style","overflowY","border","height","padding","margin","SearchBox","searchField","searchChange","type","placeholder","onChange","App","setCats","catSearch","useEffect","fetch","then","res","json","users","filteredCats","filter","cat","toLowerCase","includes","length","event","target","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"oNAiBeA,G,MAfF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GAC3B,OACE,sBAAKC,UAAU,sDAAf,UACE,qBACEC,IAAG,+BAA0BF,EAA1B,0BACHG,IAAI,SAEN,gCACE,6BAAKL,IACL,4BAAIC,YCOGK,EAfE,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAClB,OACE,8BACGA,EAAKC,KAAI,SAACC,EAAMC,GAAP,OACR,cAAC,EAAD,CACER,GAAIK,EAAKG,GAAGR,GACZF,KAAMO,EAAKG,GAAGV,KACdC,MAAOM,EAAKG,GAAGT,OACVM,EAAKG,GAAGR,UCGRS,EAZO,SAACC,GAAW,IAAD,EACLC,oBAAS,GADJ,mBACxBC,EADwB,KACjBC,EADiB,KAK/B,OAFKH,EAAMI,UAAUD,GAAS,GAEvBD,EACL,gEAEA,8BAAMF,EAAMI,YCQDC,EAhBA,SAACL,GACd,OACE,qBACEM,MAAO,CACLC,UAAW,SACXC,OAAQ,kBACRC,OAAQ,QACRC,QAAS,UACTC,OAAQ,YANZ,SASGX,EAAMI,YCEEQ,EAbG,SAAC,GAAkC,EAAhCC,YAAiC,IAApBC,EAAmB,EAAnBA,aAChC,OACE,qBAAKvB,UAAU,MAAf,SACE,uBACEA,UAAU,mCACVwB,KAAK,SACLC,YAAY,cACZC,SAAUH,OCqCHI,EArCH,WAAO,IAAD,EACQjB,mBAAS,IADjB,mBACTN,EADS,KACHwB,EADG,OAEiBlB,mBAAS,IAF1B,mBAETmB,EAFS,KAEEP,EAFF,KAIhBQ,qBAAU,WACRC,MAAM,8CACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLP,EAAQ,YAAIO,SAEf,CAACN,IAEJ,IAMMO,EAAehC,EAAKiC,QAAO,SAACC,GAChC,OAAOA,EAAIzC,KAAK0C,cAAcC,SAASX,EAAUU,kBAGnD,OAAQnC,EAAKqC,OAGX,sBAAKzC,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,sBACA,cAAC,EAAD,CAAWuB,aAfQ,SAACmB,GACtBpB,EAAYoB,EAAMC,OAAOC,UAevB,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,CAAUxC,KAAMgC,WAPtB,oBAAIpC,UAAU,KAAd,sBCpBW6C,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,QCCdO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SAKjDX,M","file":"static/js/main.988e2099.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ({ name, email, id }) => {\n  return (\n    <div className='bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5 tc'>\n      <img\n        src={`https://robohash.org/${id}?set=set4&size=200x200`}\n        alt='robo'\n      />\n      <div>\n        <h2>{name}</h2>\n        <p>{email}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({ cats }) => {\n  return (\n    <div>\n      {cats.map((user, i) => (\n        <Card\n          id={cats[i].id}\n          name={cats[i].name}\n          email={cats[i].email}\n          key={cats[i].id}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default CardList;\n","import React, { useState } from 'react';\n\nconst ErrorBoundary = (props) => {\n  const [error, setError] = useState(false);\n\n  if (!props.children) setError(true);\n\n  return error ? (\n    <h1>Ooops! Something went wrong :/</h1>\n  ) : (\n    <div>{props.children}</div>\n  );\n};\n\nexport default ErrorBoundary;\n","import React from 'react';\n\nconst Scroll = (props) => {\n  return (\n    <div\n      style={{\n        overflowY: 'scroll',\n        border: '1px solid black',\n        height: '800px',\n        padding: '5px 0px',\n        margin: '0px 40px',\n      }}\n    >\n      {props.children}\n    </div>\n  );\n};\n\nexport default Scroll;\n","import React from 'react';\n\nconst SearchBox = ({ searchField, searchChange }) => {\n  return (\n    <div className='pa2'>\n      <input\n        className='pa3 ba b--green bg-lightest-blue'\n        type='search'\n        placeholder='search cats'\n        onChange={searchChange}\n      />\n    </div>\n  );\n};\n\nexport default SearchBox;\n","import React, { useEffect, useState } from 'react';\n\nimport './App.css';\n\nimport CardList from '../components/CardList';\nimport ErrorBoundary from '../components/ErrorBoundary';\nimport Scroll from '../components/Scroll';\nimport SearchBox from '../components/SearchBox';\n\nconst App = () => {\n  const [cats, setCats] = useState([]);\n  const [catSearch, searchField] = useState('');\n\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then((res) => res.json())\n      .then((users) => {\n        setCats([...users]);\n      });\n  }, [catSearch]);\n\n  const onSearchChange = (event) => {\n    searchField(event.target.value);\n\n    // searchField({ catResults: filteredCats });\n  };\n\n  const filteredCats = cats.filter((cat) => {\n    return cat.name.toLowerCase().includes(catSearch.toLowerCase());\n  });\n\n  return !cats.length ? (\n    <h1 className='tc'>Loading</h1>\n  ) : (\n    <div className='tc'>\n      <h1 className='f1'>Pussycat</h1>\n      <SearchBox searchChange={onSearchChange} />\n      <Scroll>\n        <ErrorBoundary>\n          <CardList cats={filteredCats} />\n        </ErrorBoundary>\n      </Scroll>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport 'tachyons';\n\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}